name: Publish to Docker Hub

on: [push]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    # container: docker:stable
    strategy:
      matrix:
        build_context: [".", alpine]
    env:
      DOCKER_CLI_EXPERIMENTAL: enabled
      IMAGE_NAME: dnrce/thelounge
      THELOUNGE_VERSION: 4.1.0
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      
      - name: Install buildx
        run: |
          curl -s -L -o docker-buildx $(curl -s https://api.github.com/repos/docker/buildx/releases/latest | jq -r '.assets[] | select(.name | test("linux-amd64")) | .browser_download_url')
          chmod +x docker-buildx
          mkdir -p ~/.docker/cli-plugins
          mv docker-buildx ~/.docker/cli-plugins

      - name: Register/re-register qemu binfmt_misc
        run: docker run --rm --privileged multiarch/qemu-user-static:register --reset -p yes

      - name: Docker login
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
        run: docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD

      - name: Determine tags
        run: |
          IMAGE_TAGS=$IMAGE_NAME:latest,$IMAGE_NAME:$THELOUNGE_VERSION  
          [ "$BUILD_CONTEXT" != "." ] && IMAGE_TAGS=$IMAGE_NAME:$THELOUNGE_VERSION-$BUILD_CONTEXT
          echo ::set-env IMAGE_TAGS=$IMAGE_TAGS
      
      - name: Build image
        env:
          TARGET_PLATFORMS=linux/amd64,linux/arm64
        run: >
          docker buildx create --use --name build
          docker buildx build \
            -t $IMAGE_TAGS \
            --platform $TARGET_PLATFORMS \
            --build-arg THELOUNGE_VERSION=$THELOUNGE_VERSION \
            --file ${{ matrix.build_context }}/Dockerfile \
            --output type=image,push=true \
            .
